{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = `http://localhost:${process.env.REACT_APP_API_PORT || \"3001\"}/api`; // バックエンドのAPIベースURL\n\n// タスクを取得する関数\nexport const fetchTasks = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/tasks`);\n    return response.data;\n  } catch (error) {\n    throw new Error(\"タスクの取得に失敗しました\");\n  }\n};\n\n// タスク型の定義\n\n// タスクを作成する関数\nexport const createTask = async taskData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/tasks`, taskData);\n    return response.data;\n  } catch (error) {\n    throw new Error(\"タスクの作成に失敗しました\");\n  }\n};\n\n// タスクを更新する関数\nexport const updateTask = async (taskId, taskData) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/tasks/${taskId}`, taskData);\n    return response.data;\n  } catch (error) {\n    throw new Error(\"タスクの更新に失敗しました\");\n  }\n};\n\n// タスクを削除する関数\nexport const deleteTask = async taskId => {\n  try {\n    await axios.delete(`${API_BASE_URL}/tasks/${taskId}`);\n  } catch (error) {\n    throw new Error(\"タスクの削除に失敗しました\");\n  }\n};\n\n// 認証関連のAPI\nexport const loginUser = async credentials => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\n    return response.data;\n  } catch (error) {\n    throw new Error(\"ログインに失敗しました\");\n  }\n};\nexport const registerUser = async userData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/auth/register`, userData);\n    return response.data;\n  } catch (error) {\n    throw new Error(\"ユーザー登録に失敗しました\");\n  }\n};\n\n// ドキュメント関連のAPI\nexport const fetchDocuments = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/documents`);\n    return response.data;\n  } catch (error) {\n    throw new Error(\"ドキュメントの取得に失敗しました\");\n  }\n};\nexport const createDocument = async documentData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/documents`, documentData);\n    return response.data;\n  } catch (error) {\n    throw new Error(\"ドキュメントの作成に失敗しました\");\n  }\n};\nexport const updateDocument = async (documentId, documentData) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/documents/${documentId}`, documentData);\n    return response.data;\n  } catch (error) {\n    throw new Error(\"ドキュメントの更新に失敗しました\");\n  }\n};\nexport const deleteDocument = async documentId => {\n  try {\n    await axios.delete(`${API_BASE_URL}/documents/${documentId}`);\n  } catch (error) {\n    throw new Error(\"ドキュメントの削除に失敗しました\");\n  }\n};\n\n// 単一のドキュメントを取得する関数\nexport const fetchDocument = async documentId => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/documents/${documentId}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(\"ドキュメントの取得に失敗しました\");\n  }\n};\n\n// ドキュメントを保存する関数（updateDocumentのエイリアス）\nexport const saveDocument = async document => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/documents/${document.id}`, document);\n    return response.data;\n  } catch (error) {\n    throw new Error(\"ドキュメントの保存に失敗しました\");\n  }\n};\n\n// ワークスペース関連のAPI\nexport const fetchWorkspaces = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/workspaces`);\n    return response.data;\n  } catch (error) {\n    throw new Error(\"ワークスペースの取得に失敗しました\");\n  }\n};\nexport const fetchWorkspace = async workspaceId => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/workspaces/${workspaceId}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(\"ワークスペースの取得に失敗しました\");\n  }\n};\nexport const createWorkspace = async workspaceData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/workspaces`, workspaceData);\n    return response.data;\n  } catch (error) {\n    throw new Error(\"ワークスペースの作成に失敗しました\");\n  }\n};\nexport const updateWorkspace = async (workspaceId, workspaceData) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/workspaces/${workspaceId}`, workspaceData);\n    return response.data;\n  } catch (error) {\n    throw new Error(\"ワークスペースの更新に失敗しました\");\n  }\n};\nexport const deleteWorkspace = async workspaceId => {\n  try {\n    await axios.delete(`${API_BASE_URL}/workspaces/${workspaceId}`);\n  } catch (error) {\n    throw new Error(\"ワークスペースの削除に失敗しました\");\n  }\n};\nexport const api = {\n  getCurrentUser: async () => {\n    // Mock implementation\n    return {\n      id: 1,\n      name: \"John Doe\"\n    };\n  },\n  login: async (email, password) => {\n    // Mock implementation\n    return {\n      id: 1,\n      name: \"John Doe\",\n      email\n    };\n  },\n  signup: async (email, password) => {\n    // Mock implementation\n    return {\n      id: 2,\n      name: \"Jane Doe\",\n      email\n    };\n  },\n  logout: () => {\n    // Mock implementation\n    console.log(\"User logged out\");\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_PORT","fetchTasks","response","get","data","error","Error","createTask","taskData","post","updateTask","taskId","put","deleteTask","delete","loginUser","credentials","registerUser","userData","fetchDocuments","createDocument","documentData","updateDocument","documentId","deleteDocument","fetchDocument","saveDocument","document","id","fetchWorkspaces","fetchWorkspace","workspaceId","createWorkspace","workspaceData","updateWorkspace","deleteWorkspace","api","getCurrentUser","name","login","email","password","signup","logout","console","log"],"sources":["/Users/kenji/copilot-trial/notion-clone/notion-clone/client/src/utils/api.ts"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE_URL = `http://localhost:${\n  process.env.REACT_APP_API_PORT || \"3001\"\n}/api`; // バックエンドのAPIベースURL\n\n// タスクを取得する関数\nexport const fetchTasks = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/tasks`);\n    return response.data;\n  } catch (error) {\n    throw new Error(\"タスクの取得に失敗しました\");\n  }\n};\n\n// タスク型の定義\ninterface Task {\n  title: string;\n  description?: string;\n  completed?: boolean;\n  [key: string]: any;\n}\n\n// タスクを作成する関数\nexport const createTask = async (taskData: Task) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/tasks`, taskData);\n    return response.data;\n  } catch (error) {\n    throw new Error(\"タスクの作成に失敗しました\");\n  }\n};\n\n// タスクを更新する関数\nexport const updateTask = async (taskId: string, taskData: Task) => {\n  try {\n    const response = await axios.put(\n      `${API_BASE_URL}/tasks/${taskId}`,\n      taskData\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(\"タスクの更新に失敗しました\");\n  }\n};\n\n// タスクを削除する関数\nexport const deleteTask = async (taskId: string) => {\n  try {\n    await axios.delete(`${API_BASE_URL}/tasks/${taskId}`);\n  } catch (error) {\n    throw new Error(\"タスクの削除に失敗しました\");\n  }\n};\n\n// 認証関連のAPI\nexport const loginUser = async (credentials: {\n  email: string;\n  password: string;\n}) => {\n  try {\n    const response = await axios.post(\n      `${API_BASE_URL}/auth/login`,\n      credentials\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(\"ログインに失敗しました\");\n  }\n};\n\nexport const registerUser = async (userData: {\n  email: string;\n  password: string;\n  name?: string;\n}) => {\n  try {\n    const response = await axios.post(\n      `${API_BASE_URL}/auth/register`,\n      userData\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(\"ユーザー登録に失敗しました\");\n  }\n};\n\n// ドキュメント関連のAPI\nexport const fetchDocuments = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/documents`);\n    return response.data;\n  } catch (error) {\n    throw new Error(\"ドキュメントの取得に失敗しました\");\n  }\n};\n\ninterface Document {\n  title: string;\n  content?: any;\n  [key: string]: any;\n}\n\nexport const createDocument = async (documentData: Document) => {\n  try {\n    const response = await axios.post(\n      `${API_BASE_URL}/documents`,\n      documentData\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(\"ドキュメントの作成に失敗しました\");\n  }\n};\n\nexport const updateDocument = async (\n  documentId: string,\n  documentData: Document\n) => {\n  try {\n    const response = await axios.put(\n      `${API_BASE_URL}/documents/${documentId}`,\n      documentData\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(\"ドキュメントの更新に失敗しました\");\n  }\n};\n\nexport const deleteDocument = async (documentId: string) => {\n  try {\n    await axios.delete(`${API_BASE_URL}/documents/${documentId}`);\n  } catch (error) {\n    throw new Error(\"ドキュメントの削除に失敗しました\");\n  }\n};\n\n// 単一のドキュメントを取得する関数\nexport const fetchDocument = async (documentId: string) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/documents/${documentId}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(\"ドキュメントの取得に失敗しました\");\n  }\n};\n\n// ドキュメントを保存する関数（updateDocumentのエイリアス）\nexport const saveDocument = async (document: Document & { id: string }) => {\n  try {\n    const response = await axios.put(\n      `${API_BASE_URL}/documents/${document.id}`,\n      document\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(\"ドキュメントの保存に失敗しました\");\n  }\n};\n\n// ワークスペース関連のAPI\nexport const fetchWorkspaces = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/workspaces`);\n    return response.data;\n  } catch (error) {\n    throw new Error(\"ワークスペースの取得に失敗しました\");\n  }\n};\n\nexport const fetchWorkspace = async (workspaceId: string) => {\n  try {\n    const response = await axios.get(\n      `${API_BASE_URL}/workspaces/${workspaceId}`\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(\"ワークスペースの取得に失敗しました\");\n  }\n};\n\ninterface Workspace {\n  name: string;\n  description?: string;\n  [key: string]: any;\n}\n\nexport const createWorkspace = async (workspaceData: Workspace) => {\n  try {\n    const response = await axios.post(\n      `${API_BASE_URL}/workspaces`,\n      workspaceData\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(\"ワークスペースの作成に失敗しました\");\n  }\n};\n\nexport const updateWorkspace = async (\n  workspaceId: string,\n  workspaceData: Workspace\n) => {\n  try {\n    const response = await axios.put(\n      `${API_BASE_URL}/workspaces/${workspaceId}`,\n      workspaceData\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(\"ワークスペースの更新に失敗しました\");\n  }\n};\n\nexport const deleteWorkspace = async (workspaceId: string) => {\n  try {\n    await axios.delete(`${API_BASE_URL}/workspaces/${workspaceId}`);\n  } catch (error) {\n    throw new Error(\"ワークスペースの削除に失敗しました\");\n  }\n};\n\nexport const api = {\n  getCurrentUser: async () => {\n    // Mock implementation\n    return { id: 1, name: \"John Doe\" };\n  },\n  login: async (email: string, password: string) => {\n    // Mock implementation\n    return { id: 1, name: \"John Doe\", email };\n  },\n  signup: async (email: string, password: string) => {\n    // Mock implementation\n    return { id: 2, name: \"Jane Doe\", email };\n  },\n  logout: () => {\n    // Mock implementation\n    console.log(\"User logged out\");\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}