{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { fetchWorkspaces } from \"../utils/api\";\nconst useWorkspace = () => {\n  _s();\n  const [workspaces, setWorkspaces] = useState([]);\n  const [selectedWorkspace, setSelectedWorkspace] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const loadWorkspaces = async () => {\n      try {\n        const data = await fetchWorkspaces();\n        setWorkspaces(data);\n      } catch (err) {\n        setError(\"Failed to load workspaces\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadWorkspaces();\n  }, []);\n  return {\n    workspaces,\n    selectedWorkspace,\n    loading,\n    error\n  };\n};\n_s(useWorkspace, \"YI1vueGNiKyK8O3GXAopqqDSpY8=\");\nexport default useWorkspace;","map":{"version":3,"names":["useEffect","useState","fetchWorkspaces","useWorkspace","_s","workspaces","setWorkspaces","selectedWorkspace","setSelectedWorkspace","loading","setLoading","error","setError","loadWorkspaces","data","err"],"sources":["/Users/kenji/copilot-trial/notion-clone/notion-clone/client/src/hooks/useWorkspace.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Workspace from \"../types/workspace\";\nimport { fetchWorkspaces } from \"../utils/api\";\n\nconst useWorkspace = () => {\n  const [workspaces, setWorkspaces] = useState<Workspace[]>([]);\n  const [selectedWorkspace, setSelectedWorkspace] = useState<Workspace | null>(\n    null\n  );\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const loadWorkspaces = async () => {\n      try {\n        const data = await fetchWorkspaces();\n        setWorkspaces(data);\n      } catch (err) {\n        setError(\"Failed to load workspaces\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadWorkspaces();\n  }, []);\n\n  return { workspaces, selectedWorkspace, loading, error };\n};\n\nexport default useWorkspace;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,eAAe,QAAQ,cAAc;AAE9C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAc,EAAE,CAAC;EAC7D,MAAM,CAACM,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGP,QAAQ,CACxD,IACF,CAAC;EACD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAU,IAAI,CAAC;EACrD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAgB,IAAI,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACd,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMZ,eAAe,CAAC,CAAC;QACpCI,aAAa,CAACQ,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZH,QAAQ,CAAC,2BAA2B,CAAC;MACvC,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAER,UAAU;IAAEE,iBAAiB;IAAEE,OAAO;IAAEE;EAAM,CAAC;AAC1D,CAAC;AAACP,EAAA,CAxBID,YAAY;AA0BlB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}